package:
  name: nvidia-container-toolkit
  version: 1.17.3
  epoch: 0
  description: Build and run containers leveraging NVIDIA GPUs
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 10
    provides:
      - ${{package.name}}-nvidia-cdi-hook
      - ${{package.name}}-nvidia-container-runtime
      - ${{package.name}}-nvidia-container-runtime-hook
    runtime:
      - ${{package.name}}-base
      - libnvidia-container

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go
      - openssf-compiler-options
  environment:
    # See https://github.com/wolfi-dev/os/issues/34568
    GCC_SPEC_FILE: /home/build/openssf.spec

vars:
  base-cmds: nvidia-container-runtime nvidia-ctk nvidia-cdi-hook
  main-cmds: nvidia-container-runtime-hook
  operator-extensions-cmds: nvidia-container-runtime.cdi nvidia-container-runtime.legacy

pipeline:
  - uses: git-checkout
    with:
      expected-commit: cb82e29c75d387992bf59eb6eadf5d96cb6d4747
      repository: https://github.com/NVIDIA/nvidia-container-toolkit
      tag: v${{package.version}}

  - runs: |
      gccdir="$(GCC_SPEC_FILE=/dev/null gcc --print-search-dirs | grep ^install: | cut -d' ' -f2)"
      sed -r 's/,?-z,now//' < "$gccdir/openssf.spec" > /home/build/openssf.spec

  - runs: |
      make -j$(nproc) cmds

  - runs: |
      mkdir -p ${{targets.contextdir}}/usr/bin
      mv ${{vars.main-cmds}} ${{targets.contextdir}}/usr/bin

  - uses: strip

test:
  pipeline:
    - runs: |
        for cmd in ${{vars.main-cmds}}; do
          $cmd --help
        done

subpackages:
  - name: ${{package.name}}-base
    dependencies:
      provider-priority: 10
      provides:
        - ${{package.name}}-containerd
        - ${{package.name}}-crio
        - ${{package.name}}-docker
        - ${{package.name}}-nvidia-ctk
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{vars.base-cmds}} ${{targets.contextdir}}/usr/bin
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - runc # runc is just a placeholder, the actual runtime binary is TBD by the user
      pipeline:
        - runs: |
            for cmd in ${{vars.base-cmds}}; do
              $cmd --help
            done

  - name: ${{package.name}}-operator-extensions
    dependencies:
      provider-priority: 10
      provides:
        - ${{package.name}}-nvidia-container-runtime-cdi
        - ${{package.name}}-nvidia-container-runtime-legacy
      runtime:
        - ${{package.name}}-base
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{vars.operator-extensions-cmds}} ${{targets.contextdir}}/usr/bin
      - uses: strip
      - name: Check for new, not-yet-packaged commands
        runs: |
          # At this point, all expected commands have been moved into
          # package directories. If any remain, then upstream may have
          # added more, and we should update our packaging.
          [ "$(find . -maxdepth 1 -type f -perm -111)" = "" ]
    test:
      environment:
        contents:
          packages:
            - runc # runc is just a placeholder, the actual runtime binary is TBD by the user
      pipeline:
        - runs: |
            for cmd in ${{vars.operator-extensions-cmds}}; do
              $cmd --help
            done

  - name: "${{package.name}}-nvidia-toolkit"
    dependencies:
      provider-priority: 10
      provides:
        - ${{package.name}}-operator
        - ${{package.name}}-toolkit
    pipeline:
      - uses: go/build
        with:
          modroot: .
          packages: ./tools/container/nvidia-toolkit
          ldflags: -s -w -X main.Version=${{package.version}}
          output: nvidia-toolkit
          vendor: true
      - runs: |
          # Ref: https://github.com/NVIDIA/nvidia-container-toolkit/blob/v1.15.0/deployments/container/Dockerfile.ubi8#L74
          mkdir -p ${{targets.contextdir}}/work
          ln -sf /usr/bin/nvidia-toolkit ${{targets.contextdir}}/work/nvidia-toolkit
      - uses: strip
    test:
      pipeline:
        - runs: |
            /work/nvidia-toolkit --version

update:
  enabled: true
  ignore-regex-patterns:
    - -rc
  github:
    identifier: NVIDIA/nvidia-container-toolkit
    strip-prefix: v
